<?php

/**
 * @file
 * MARS Common module main file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Url;
use Drupal\node\Entity\Node;

/**
 * Implements hook_theme().
 */
function mars_common_theme($existing, $type, $theme, $path) {
  return [
    'header_block' => [
      'variables' => [
        'logo'              => NULL,
        'primary_menu'      => NULL,
        'secondary_menu'    => NULL,
        'search_menu'       => NULL,
        'language_selector' => NULL,
        'search_block'      => NULL,
        'alert_banner'      => NULL,
      ],
      'template' => 'block--mars-common--header',
    ],
    'footer_block' => [
      'variables' => [
        'logo'            => NULL,
        'twix_border'     => NULL,
        'social_links'    => NULL,
        'top_footer_menu' => NULL,
        'legal_links'     => NULL,
        'marketing'       => NULL,
        'corporate_tout'  => NULL,
        'region_selector' => NULL,
      ],
      'template' => 'footer-block',
    ],
    'content_feature_module_block' => [
      'variables' => [
        'eyebrow' => NULL,
        'label' => NULL,
        'background' => NULL,
        'description' => NULL,
        'explore_cta' => NULL,
        'explore_cta_link' => NULL,
      ],
      'template' => 'content-feature-module-block',
    ],
    'social_feed_block' => [
      'variables' => [
        'label' => '',
        'items' => [],
      ],
    ],
    'parent_page_header_block' => [
      'variables' => [
        'eyebrow' => NULL,
        'label' => NULL,
        'background' => NULL,
        'description' => NULL,
      ],
      'template' => 'parent-page-header-block',
    ],
    'file_text_item_widget' => [
      'render element' => 'element',
    ],
    'carousel_item_formatter' => [
      'variables' => [
        'item_url' => NULL,
        'item_description' => NULL,
        'media_type' => NULL,
      ],
    ],
    'list_item_formatter' => [
      'variables' => [
        'item_url' => NULL,
        'item_description' => NULL,
      ],
    ],
    'product_feature_block' => [
      'variables' => [
        'eyebrow' => NULL,
        'label' => NULL,
        'background_color' => NULL,
        'image' => NULL,
        'explore_cta' => NULL,
        'explore_cta_link' => NULL,
      ],
      'template' => 'product-feature-block',
    ],
  ];
}

/**
 * Prepares variables for carousel item widget templates.
 *
 * Default template: carousel-item-widget.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: A render element representing the carousel item field widget.
 */
function mars_common_preprocess_file_text_item_widget(array &$variables) {
  $element = $variables['element'];

  $variables['attributes'] = [
    'class' => [
      'carousel-item-widget',
      'js-form-managed-file',
      'form-managed-file',
      'clearfix',
    ],
  ];

  $variables['data'] = [];
  foreach (Element::children($element) as $child) {
    $variables['data'][$child] = $element[$child];
  }

}

/**
 * Implements hook_preprocess_HOOK().
 */
function mars_common_preprocess_block__inline_block__media_carousel(array &$variables) {
  $field_carousel_title = $variables['content']['field_carousel_title'];
  $field_carousel_items = $variables['content']['field_carousel_items'];

  $media_items = [];
  foreach ($field_carousel_items as $item_key => $item_value) {
    if (is_numeric($item_key)) {
      $media_items[] = [
        'src' => $item_value['#item_url']->getUri(),
        'content' => $item_value['#item_description'],
        'video' => ($item_value['#media_type'] == 'video'),
        'image' => ($item_value['#media_type'] == 'image'),
        'alt' => NULL,
        'title' => NULL,
      ];
    }
  }

  $variables['title'] = $field_carousel_title['#items'][0]->value;
  $variables['items'] = $media_items;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function mars_common_preprocess_block__inline_block__list(array &$variables) {
  $field_list_items = $variables['content']['field_list_items'];

  $ol_items = [];
  foreach ($field_list_items as $item_key => $item_value) {
    if (is_numeric($item_key)) {
      $item = [
        'content' => $item_value['#item_description'],
      ];

      if ($item_value['#item_url'] instanceof Url) {
        $item['image'] = [
          'src' => $item_value['#item_url']->getUri(),
          'alt' => NULL,
          'title' => NULL,
        ];
      }

      $ol_items[] = $item;
    }
  }

  $variables['ol_items'] = $ol_items;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function mars_common_preprocess_block__inline_block__text_component(array &$variables) {
  $field_body = $variables['content']['field_text_component_body'];
  $field_drop_cap = $variables['content']['field_text_component_drop_cap'];
  $variables['content'] = $field_body['#items'][0]->value;
  $variables['drop_cap'] = $field_drop_cap['#items'][0]->value;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function mars_common_preprocess_block__inline_block__inline_image(array &$variables) {
  $field_image = $variables['content']['field_inline_image_file']['#items']->target_id;
  $image_alt = $variables['content']['field_inline_image_file']['#items']->alt;
  $field_shape_motif = $variables['content']['field_inline_image_svg_asset']['#items']->value;
  $field_image_desc = $variables['content']['field_inline_image_description']['#items']->value;

  $file_url = NULL;
  if (isset($field_image)) {
    $file_uri = \Drupal::entityTypeManager()
      ->getStorage('file')
      ->load($field_image)
      ->getFileUri();

    $file_url = Url::fromUri(file_create_url($file_uri));
  }

  $variables['image_src'] = $file_url;
  $variables['image_alt'] = $image_alt;
  $variables['image_title'] = NULL;
  $variables['shape_motif'] = (bool) $field_shape_motif;
  $variables['content'] = $field_image_desc;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function mars_common_preprocess_block__inline_block__full_width_image(array &$variables) {
  $field_image = $variables['content']['field_full_image_file']['#items']->target_id;
  $image_alt = $variables['content']['field_full_image_file']['#items']->alt;
  $field_shape_motif = $variables['content']['field_full_image_svg_asset']['#items']->value;
  $field_image_desc = $variables['content']['field_full_image_description']['#items']->value;
  $field_heading = $variables['content']['field_full_image_title']['#items']->value;

  $file_url = NULL;
  if (isset($field_image)) {
    $file_uri = \Drupal::entityTypeManager()
      ->getStorage('file')
      ->load($field_image)
      ->getFileUri();

    $file_url = Url::fromUri(file_create_url($file_uri));
  }

  $variables['heading'] = $field_heading;
  $variables['content'] = $field_image_desc;
  $variables['shape_motif'] = (bool) $field_shape_motif;
  $variables['media'] = [
    'image' => TRUE,
    'src' => $file_url,
    'alt' => $image_alt,
    'title' => NULL,
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function mars_common_preprocess_block__inline_block__full_width_video(array &$variables) {
  $field_video_url = $variables['content']['field_full_video_path']['#items']->value;
  $field_shape_motif = $variables['content']['field_full_video_svg_asset']['#items']->value;
  $field_video_desc = $variables['content']['field_full_video_description']['#items']->value;
  $field_heading = $variables['content']['field_full_video_title']['#items']->value;

  $variables['heading'] = $field_heading;
  $variables['content'] = $field_video_desc;
  $variables['shape_motif'] = (bool) $field_shape_motif;
  $variables['media'] = [
    'video' => TRUE,
    'src' => $field_video_url,
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function mars_common_preprocess_views_view__faq_view__page(array &$variables) {
  $field_title = $variables['view']->getTitle();
  $rows = $variables['rows'];

  $faq_items = [];
  if (isset($rows[0])) {
    foreach ($rows[0]['#rows'] as $row_key => $row_value) {
      $qa_node = Node::load($row_value['#row']->nid);
      $question_value = $qa_node->get('field_qa_item_question')->value;
      $answer_value = $qa_node->get('field_qa_item_answer')->value;

      $faq_items[$row_key]['content'] = [
        'question' => $question_value,
        'answer' => $answer_value,
        'order' => $row_key,
      ];
    }
  }

  $variables['qa_items'] = $faq_items;
  $variables['faq_title'] = $field_title;

  $request = \Drupal::requestStack()->getCurrentRequest();
  if ($request->query->get('items_per_page') != 'All') {
    $query_params = $request->query->all();
    $query_params['items_per_page'] = 'All';
    $path_query = http_build_query($query_params);
    $current_path = $request->getPathInfo();

    $cta_button_label = $variables['exposed']['items_per_page']['#options']['All'];
    $cta_button_link = $current_path . '?' . $path_query;
  }

  $variables['cta_button_label'] = $cta_button_label ?? NULL;
  $variables['cta_button_link'] = $cta_button_link ?? NULL;
}

/**
 * Implements hook_form_alter().
 */
function mars_common_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (
    $form_id === 'block_form' ||
    $form_id === 'layout_builder_add_block' ||
    $form_id === 'layout_builder_update_block'
  ) {
    $form['settings']['label_display']['#access'] = FALSE;
  }
}
