{#
/**
 * @file
 * Theme override for status messages.
 *
 * Displays status, error, and warning messages, grouped by type.
 *
 * An invisible heading identifies the messages for assistive technology.
 * Sighted users see a colored box. See http://www.w3.org/TR/WCAG-TECHS/H69.html
 * for info.
 *
 * Add an ARIA label to the contentinfo area so that assistive technology
 * user agents will better describe this landmark.
 *
 * Available variables:
 * - message_list: List of messages to be displayed, grouped by type.
 * - message_url: ULR for Status messages
 * - status_headings: List of all status types.
 * - display: (optional) May have a value of 'status' or 'error' when only
 *   displaying messages of that specific type.
 * - attributes: HTML attributes for the element, including:
 *   - class: HTML classes.
 */
#}
{% set status__base_class = status__base_class|default('status') %}
{% set status_link__base_class = status_link__base_class|default('status-link') %}

{% for type, messages in message_list %}
  {% set has_no_content = messages|join|replace({' ': ''}) is empty %}
  <div role="contentinfo" aria-hidden="{{ has_no_content }}" {{ bem('container', [], status__base_class)}} aria-label="{{ type }}"{{ attributes|without('role', 'aria-label') }}>
    {% if message_url %}
      <a {{ bem(status_link__base_class, status_link__modifiers, status_link__blockname) }} href="{{ message_url }}">
    {% endif %}
    {% if type == 'error' %}
      <div role="alert">
    {% endif %}
      <ul {{ bem('list', [], status__base_class)}}>
        {% for message in messages %}
          <li {{ bem(status__base_class, [type])}}>
            <div {{ bem('message', [], status__base_class)}}>{{ message }}</div>
          </li>
        {% endfor %}
      </ul>
    {% if type == 'error' %}
      </div>
    {% endif %}
    {% if message_url %}
      </a>
    {% endif %}
  </div>
{% endfor %}
